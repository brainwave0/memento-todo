var Entry=function(){function Entry(){this.fields={};this.id=0}Entry.prototype.field=function(name){return this.fields[name]};Entry.prototype.set=function(name,value){this.fields[name]=value};Entry.prototype.show=function(){return this};return Entry}();var Entries=function(){function Entries(){this.next_id=0;this.length=0}return Entries}();var Library=function(){function Library(){}Library.prototype.entries=function(){return entries};Library.prototype.create=function(values){var new_entry=new Entry;new_entry.id=entries.length;new_entry.fields=values;entries[entries.next_id]=new_entry;entries.next_id+=1;entries.length+=1};return Library}();function entry(){return current_entry}function lib(){return library}function arg(name){return args[name]}function libByName(name){return new Library}function message(x){console.log(x)}var current_entry;var library;var entries;var args={};function to_array(iterable){var result=[];for(var i=0;i<iterable.length;i++){result.push(iterable[i])}return result}function ready(task){return!task.field("Start datetime")||task.field("Start datetime").getTime()<=Date.now()}function active_tasks(){return to_array(lib().entries()).filter(function(x){return ready(x)})}function get_all_tasks(){return to_array(lib().entries())}function sum(nums,f){if(f===void 0){f=id}return nums.map(f).reduce(function(a,b){return a+b},0)}function shuffle_array(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp}return array}var SortDir;(function(SortDir){SortDir[SortDir["Ascending"]=0]="Ascending";SortDir[SortDir["Descending"]=1]="Descending"})(SortDir||(SortDir={}));function sort(elems,field_selector,sort_direction){if(sort_direction==SortDir.Ascending){return elems.sort(function(a,b){return field_selector(a)-field_selector(b)})}else{return elems.sort(function(a,b){return field_selector(b)-field_selector(a)})}}function copy_array(xs){var result=[];for(var _i=0,xs_1=xs;_i<xs_1.length;_i++){var x=xs_1[_i];result.push(x)}return result}function assert(p,msg){if(!p){throw msg}}function id(x){return x}function array_equals2(ass,bss){if(ass.length!=bss.length){return false}for(var i=0;i<ass.length;i++){if(!array_equals(ass[i],bss[i])){return false}}return true}function array_equals(as,bs){if(as.length!=bs.length){return false}for(var i=0;i<as.length;i++){if(as[i]!=bs[i]){return false}}return true}function random_choice(xs){return xs[Math.round(Math.random()*(xs.length-1))]}function average_priority(){var all_tasks=get_all_tasks();return sum(all_tasks.map(function(x){return x.field("Importance")}))/all_tasks.length}var sort_orders=[function start_datetime(entries){return sort(entries,function(e){return e.field("Start datetime")},SortDir.Ascending)},function deadline(entries){return sort(entries.filter(function(x){return x.field("Deadline")}),function(e){return e.field("Deadline")},SortDir.Ascending)},function value(entries){return sort(entries.filter(function(x){return x.field("Value")}),function(e){return e.field("Value")},SortDir.Descending)},function importance(entries){return sort(entries.filter(function(x){return x.field("Importance")}),function(e){return e.field("Importance")},SortDir.Descending)},function remaining_runtime(entries){return sort(entries,function(e){return e.field("Expected runtime")?e.field("Expected runtime")-e.field("Runtime"):e.field("Runtime")},SortDir.Ascending)}];var __spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};function instant_runoff(lists){lists=lists.filter(function(x){return x.length>0});var first_choices=lists.map(head);var counts_=counts(first_choices);var first_choice_counts=unique(zip(first_choices,counts_),function(x){return x[0].id});var total_votes=sum(first_choice_counts,second);var winner=head(head(first_choice_counts.filter(function(x){return x[1]>total_votes/2})));if(winner){return winner}else{var loser_1=loser(lists);if(loser_1&&unique(first_choices,by_id).length>1){return instant_runoff(lists.map(function(xs){return xs.filter(function(x){return x.id!=loser_1.id})}))}else{return random_choice(first_choices)}}}function counts(xs){return xs.map(function(x){return xs.filter(function(y){return x.id==y.id}).length})}function head(xs){if(xs){return xs[0]}else{return undefined}}function second(pair){return pair[1]}function first(pair){return pair[0]}function print_lists(lists){for(var _i=0,lists_1=lists;_i<lists_1.length;_i++){var list=lists_1[_i];var line="";for(var _a=0,list_1=list;_a<list_1.length;_a++){var x=list_1[_a];line+=Math.floor(x.field("randnum")*10000)+" "}console.log(line)}console.log()}function loser(lists){function loser2(heads,tails){var counts_=counts(heads);var min_count=Math.min.apply(Math,counts_);var losers=unique(zip(heads,counts_).filter(function(x){return x[1]==min_count}).map(first),by_id);var ranks=losers.map(function(x){return max_rank(x,tails)}).filter(function(x){return x!=-1});var min_rank_=Math.max.apply(Math,ranks);losers=zip(losers,ranks).filter(function(x){return x[1]==min_rank_}).map(first);if(losers.length==1){return losers[0]}else if(empty(tails.filter(not_empty))){return random_choice(heads)}else if(losers.length>1){return loser2(losers,tails.map(function(xs){return xs.slice(min_rank_+1)}))}else{return undefined}}var heads=lists.map(head);var tails=lists.map(tail);return loser2(heads,tails)}function rank(x,xs){return xs.findIndex(function(y){return y.id==x.id})}function ranks(x,lists){return lists.map(function(ys){return rank(x,ys)})}function max_rank(x,lists){var result=Math.min.apply(Math,ranks(x,lists).filter(function(x){return x>=0}));return result}function tail(xs){return xs.slice(1)}function not_empty(xs){return xs.length>0}function empty(xs){return xs.length==0}function zip(){var rows=[];for(var _i=0;_i<arguments.length;_i++){rows[_i]=arguments[_i]}return __spreadArrays(rows[0]).map(function(_,c){return rows.map(function(row){return row[c]})})}function unique(xs,f){if(f===void 0){f=id}var results=[];for(var _i=0,xs_2=xs;_i<xs_2.length;_i++){var x=xs_2[_i];if(results.map(f).indexOf(f(x))==-1){results.push(x)}}return results}function by_id(x){return x.id}function start(){create_log_entry("Started entry \""+entry().field("Name")+"\"");entry().set("Timer start",new Date);entry().set("Running",true)}function finish(){create_log_entry("Finished entry \""+entry().field("Name")+"\"");entry().set("Runtime",entry().field("Runtime")+elapsed());entry().set("Running",false)}function elapsed(){return Date.now()-entry().field("Timer start").getTime()}function create_log_entry(text){libByName("Log").create({Description:text,Datetime:new Date(Date.now())})}function start_stop(){if(entry().field("Running")){finish()}else{start()}}function pick_task(){var lists=[];for(var _i=0,sort_orders_1=sort_orders;_i<sort_orders_1.length;_i++){var fn=sort_orders_1[_i];lists.push(fn(active_tasks()))}var task=instant_runoff(lists);start();task.show();return[task,lists]}
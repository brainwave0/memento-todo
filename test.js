var test_data=[{Name:"Adjust bedtime ","Repeat Interval":172800000,Notes:null,Deadline:null,"Expected runtime":187000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,18,11,11),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,11-1,18,7,58),Value:4,Done:0,"Total runtime":454502},{Name:"Brush teeth ","Repeat Interval":43200000,Notes:null,Deadline:null,"Expected runtime":120000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,17,0,21),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,21,29,32),Value:4,Done:0,"Total runtime":522983},{Name:"Cancel Crunchyroll ","Repeat Interval":230400000,Notes:null,Deadline:null,"Expected runtime":300000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,14-1,19,49,57),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,3,49,40),Value:0,Done:1,"Total runtime":0},{Name:"Cancel ProtonVPN ","Repeat Interval":2592000000,Notes:null,Deadline:null,"Expected runtime":300000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,23-1,8,51,3),Running:false,Runtime:0,"Timer start":new Date(2020,11-1,23-1,8,48,17),Value:0,Done:1,"Total runtime":0},{Name:"Clean mask ","Repeat Interval":86400000,Notes:null,Deadline:null,"Expected runtime":240000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,15-1,15,10,25),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,8,25),Value:11,Done:1,"Total runtime":1034630},{Name:"Clean the kitchen ","Repeat Interval":57600000,Notes:null,Deadline:null,"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,14-1,0,40,2),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,8,38,41),Value:11,Done:0,"Total runtime":3824604},{Name:"Clean water chamber and tubing ","Repeat Interval":172800000,Notes:null,Deadline:null,"Expected runtime":240000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,18,18,59),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,11-1,18,14,51),Value:4,Done:0,"Total runtime":477473},{Name:"Clean your bathroom ","Repeat Interval":460800000,Notes:null,Deadline:null,"Expected runtime":1200000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,17-1,2,24,18),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,2-1,20,7,12),Value:0,Done:1,"Total runtime":0},{Name:"Contribute to IPFS ","Repeat Interval":3600000,Notes:null,Deadline:null,"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,10,55,20),Running:false,Runtime:6123601,"Timer start":new Date(2020,12-1,14-1,15,8,17),Value:5,Done:0,"Total runtime":6123673},{Name:"Cook ","Repeat Interval":115200000,Notes:null,Deadline:null,"Expected runtime":1844000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,12,0,57),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,4,0,35),Value:5,Done:0,"Total runtime":2020240},{Name:"Disinfect BiPAP ","Repeat Interval":2592000000,Notes:null,Deadline:null,"Expected runtime":600000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2021,1-1,10-1,21,59,49),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,11-1,21,59,24),Value:3,Done:1,"Total runtime":467459},{Name:"Enroll","Repeat Interval":null,Notes:null,Deadline:new Date(2021,1-1,18-1,0,0,1),"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2021,1-1,21-1,0,0,51),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,4-1,12,24,20),Value:0,Done:1,"Total runtime":0},{Name:"Forehead medicine ","Repeat Interval":28800000,Notes:null,Deadline:null,"Expected runtime":120000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,16,38,38),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,13,50),Value:6,Done:0,"Total runtime":1136664},{Name:"Laundry ","Repeat Interval":230400000,Notes:null,Deadline:null,"Expected runtime":720000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,17,0,42),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,10,48,32),Value:0,Done:0,"Total runtime":0},{Name:"Learn Japanese ","Repeat Interval":14400000,Notes:null,Deadline:null,"Expected runtime":3478000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,10-1,21,12,23),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,4,44),Value:25,Done:0,"Total runtime":12018302},{Name:"Lift ","Repeat Interval":86400000,Notes:"Rows<br>Upright rows&nbsp;<br>Planks&nbsp;<br>\u2714\uFE0FDeadlifts&nbsp;<br>Squats",Deadline:null,"Expected runtime":203000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,17,0,59),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,10,47,48),Value:12,Done:0,"Total runtime":753714},{Name:"Make music ","Repeat Interval":3600000,Notes:null,Deadline:null,"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,11,47,47),Running:false,Runtime:2379938,"Timer start":new Date(2020,12-1,14-1,15,16,10),Value:4,Done:0,"Total runtime":2379963},{Name:"Manage music collection ","Repeat Interval":3600000,Notes:null,Deadline:null,"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,10-1,13,37,36),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,13,54,49),Value:19,Done:0,"Total runtime":26961311},{Name:"Meds ","Repeat Interval":115200000,Notes:null,Deadline:null,"Expected runtime":300000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,22,33,2),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,13,40,56),Value:7,Done:0,"Total runtime":1611528},{Name:"Mop ","Repeat Interval":230400000,Notes:null,Deadline:null,"Expected runtime":1200000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,11-1,12,22,13),Running:false,Runtime:1827812,"Timer start":new Date(2020,12-1,12-1,7,41,20),Value:4,Done:0,"Total runtime":1827824},{Name:"Pay off credit card ","Repeat Interval":null,Notes:null,Deadline:null,"Expected runtime":120000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2021,1-1,1-1,0,0,14),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,1-1,7,34,38),Value:0,Done:1,"Total runtime":0},{Name:"Pick up the poops ","Repeat Interval":115200000,Notes:null,Deadline:null,"Expected runtime":600000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,14-1,7,0,23),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,16,5,15),Value:0,Done:0,"Total runtime":0},{Name:"Put stuff away and update Inventory ","Repeat Interval":86400000,Notes:null,Deadline:null,"Expected runtime":762000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,12-1,10,10,21),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,13,56),Value:5,Done:0,"Total runtime":1201348},{Name:"Recreation ","Repeat Interval":1920000,Notes:null,Deadline:null,"Expected runtime":0,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,12-1,9,28,0),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,8,11,55),Value:21,Done:0,"Total runtime":18135557},{Name:"Refill the dogs water bowls ","Repeat Interval":460800000,Notes:null,Deadline:null,"Expected runtime":300000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,16-1,1,12,53),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,3-1,13,30,45),Value:0,Done:1,"Total runtime":0},{Name:"Rinse the blue filter ","Repeat Interval":604800000,Notes:null,Deadline:null,"Expected runtime":120000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,17,0,25),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,16,48),Value:0,Done:0,"Total runtime":0},{Name:"Shave ","Repeat Interval":115200000,Notes:null,Deadline:null,"Expected runtime":217000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,12,1,11),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,12-1,4,1,0),Value:3,Done:0,"Total runtime":217256},{Name:"Shower ","Repeat Interval":86400000,Notes:null,Deadline:null,"Expected runtime":900000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,14-1,10,25,20),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,14-1,15,14,0),Value:6,Done:0,"Total runtime":1038846},{Name:"Stretch","Repeat Interval":259200000,Notes:null,Deadline:null,"Expected runtime":300000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,16-1,13,48,20),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,13,43,53),Value:10,Done:1,"Total runtime":1199804},{Name:"Take out the trash","Repeat Interval":115200000,Notes:null,Deadline:null,"Expected runtime":237000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,14-1,17,35,44),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,9,35,31),Value:9,Done:1,"Total runtime":937737},{Name:"Walk Lucy ","Repeat Interval":21600000,Notes:null,Deadline:null,"Expected runtime":1958000,Advanced:"Advanced",Importance:null,"Start datetime":new Date(2020,12-1,13-1,17,23,12),Running:false,Runtime:0,"Timer start":new Date(2020,12-1,13-1,10,48,47),Value:18,Done:0,"Total runtime":12272919}];var Entry=function(){function Entry(){this.fields={};this.id=0}Entry.prototype.field=function(name){return this.fields[name]};Entry.prototype.set=function(name,value){this.fields[name]=value};Entry.prototype.show=function(){return this};return Entry}();var Entries=function(){function Entries(){this.next_id=0;this.length=0}return Entries}();var Library=function(){function Library(){}Library.prototype.entries=function(){return entries};Library.prototype.create=function(values){var new_entry=new Entry;new_entry.id=entries.length;new_entry.fields=values;entries[entries.next_id]=new_entry;entries.next_id+=1;entries.length+=1};return Library}();function entry(){return current_entry}function lib(){return library}function arg(name){return args[name]}function libByName(name){return new Library}function message(x){console.log(x)}var current_entry;var library;var entries;var args={};function to_array(iterable){var result=[];for(var i=0;i<iterable.length;i++){result.push(iterable[i])}return result}function ready(task){return!task.field("Start datetime")||task.field("Start datetime").getTime()<=Date.now()}function active_tasks(){return to_array(lib().entries()).filter(function(x){return ready(x)})}function get_all_tasks(){return to_array(lib().entries())}function sum(nums,f){if(f===void 0){f=id}return nums.map(f).reduce(function(a,b){return a+b},0)}function shuffle_array(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp}return array}var SortDir;(function(SortDir){SortDir[SortDir["Ascending"]=0]="Ascending";SortDir[SortDir["Descending"]=1]="Descending"})(SortDir||(SortDir={}));function sort(elems,field_selector,sort_direction){if(sort_direction==SortDir.Ascending){return elems.sort(function(a,b){return field_selector(a)-field_selector(b)})}else{return elems.sort(function(a,b){return field_selector(b)-field_selector(a)})}}function copy_array(xs){var result=[];for(var _i=0,xs_1=xs;_i<xs_1.length;_i++){var x=xs_1[_i];result.push(x)}return result}function assert(p,msg){if(!p){throw msg}}function id(x){return x}function xbisect(value,more){if(Math.log(value)/Math.log(2)%1===0){if(more){return value*2}else{return value-value/4}}var x=1;while(x<value){x*=2}var delta=x;while(x!=value){delta/=2;if(x<value){x+=delta}else if(x>value){x-=delta}}if(more){x+=delta/2}else{x-=delta/2}return x}function adjust_priority(amount){var avg_priority=average_priority();if(avg_priority<0&&amount<0||avg_priority>=0&&amount>0){adjust_other(entry(),-amount)}else if(avg_priority<0&&amount>0||avg_priority>=0&&amount<0){entry().set("Importance",entry().field("Importance")+amount)}}function adjust_other(entry,amount){get_all_tasks().filter(function(x){return x.id!=entry.id}).forEach(function(x){return x.set("Importance",x.field("Importance")+amount)})}function average_priority(){var all_tasks=get_all_tasks();return sum(all_tasks.map(function(x){return x.field("Importance")}))/all_tasks.length}var __spreadArrays=this&&this.__spreadArrays||function(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r};function instant_runoff(lists){lists=lists.filter(function(x){return x.length>0});var first_choices=lists.map(head);var counts_=counts(first_choices);var first_choice_counts=unique(zip(first_choices,counts_),first);var total_votes=sum(first_choice_counts,second);var winner=head(head(first_choice_counts.filter(function(x){return x[1]>total_votes/2})));if(winner){return winner}else{var loser_1=loser(lists);if(loser_1&&unique(first_choices).length>1){return instant_runoff(lists.map(function(xs){return xs.filter(function(x){return x!=loser_1})}))}else{return random_choice(first_choices)}}}function counts(xs){return xs.map(function(x){return xs.filter(function(y){return x==y}).length})}function head(xs){if(xs){return xs[0]}else{return undefined}}function second(pair){return pair[1]}function first(pair){return pair[0]}function print_lists(lists){for(var _i=0,lists_1=lists;_i<lists_1.length;_i++){var list=lists_1[_i];Infinity;var line="";for(var _a=0,list_1=list;_a<list_1.length;_a++){var x=list_1[_a];line+=Math.floor(x.field("randnum")*10000)+" "}console.log(line)}console.log()}function loser(lists){function loser2(heads,tails){var counts_=counts(heads);var min_count=Math.min.apply(Math,counts_);var losers=unique(zip(heads,counts_).filter(function(x){return x[1]==min_count}).map(first));var ranks=losers.map(function(x){return max_rank(x,tails)}).filter(function(x){return x!=-1});var min_rank_=Math.max.apply(Math,ranks);losers=zip(losers,ranks).filter(function(x){return x[1]==min_rank_}).map(first);if(losers.length==1){return losers[0]}else if(empty(tails.filter(not_empty))){return random_choice(heads)}else if(losers.length>1){return loser2(losers,tails.map(function(xs){return xs.slice(min_rank_+1)}))}else{return undefined}}var heads=lists.map(head);var tails=lists.map(tail);return loser2(heads,tails)}function rank(x,xs){return xs.findIndex(function(y){return y==x})}function ranks(x,lists){return lists.map(function(ys){return rank(x,ys)})}function max_rank(x,lists){var result=Math.min.apply(Math,ranks(x,lists).filter(function(x){return x>=0}));return result}function tail(xs){return xs.slice(1)}function random_choice(xs){message("randomized");return xs[Math.round(Math.random()*(xs.length-1))]}function not_empty(xs){return xs.length>0}function empty(xs){return xs.length==0}function zip(){var rows=[];for(var _i=0;_i<arguments.length;_i++){rows[_i]=arguments[_i]}return __spreadArrays(rows[0]).map(function(_,c){return rows.map(function(row){return row[c]})})}function unique(xs,f){if(f===void 0){f=id}var results=[];for(var _i=0,xs_2=xs;_i<xs_2.length;_i++){var x=xs_2[_i];if(results.map(f).indexOf(f(x))==-1){results.push(x)}}return results}var AndroidAlarm={create:function(hour,minutes,message,options){i=intent("android.intent.action.SET_ALARM");i.extraInt("android.intent.extra.alarm.HOUR",hour);i.extraInt("android.intent.extra.alarm.MINUTES",minutes);if(message!==undefined)i.extra("android.intent.extra.alarm.MESSAGE",message);if(options!==undefined){if(options.days!==undefined)i.extraArrayInt("android.intent.extra.alarm.DAYS",options.days);if(options.vibrate!==undefined)i.extraBool("android.intent.extra.alarm.VIBRATE",options.vibrate);if(options.skipUI!==undefined)i.extraBool("android.intent.extra.alarm.SKIP_UI",options.skipUI)}i.send()},timer:function(length,message,skipUI){i=intent("android.intent.action.SET_TIMER");i.extraInt("android.intent.extra.alarm.LENGTH",length);if(message!==undefined)i.extra("android.intent.extra.alarm.MESSAGE",message);if(skipUI!==undefined)i.extraBool("android.intent.extra.alarm.SKIP_UI",skipUI);i.send()}};var timer_duration=32*60;function start(entry){create_log_entry("Started entry \""+entry.field("Name")+"\"");entry.set("Timer start",new Date(Date.now()));toggle_running(entry)}function finish(){create_log_entry("Finished entry \""+entry().field("Name")+"\"");entry().set("Runtime",entry().field("Runtime")+elapsed());entry().set("Total runtime",entry().field("Total runtime")+elapsed());entry().set("Value",entry().field("Value")+arg("Rating"));toggle_running(entry())}function set_timer(){AndroidAlarm.timer(timer_duration,entry().field("Name"),false)}function toggle_running(entry){entry.set("Running",!entry.field("Running"))}function elapsed(){return Date.now()-entry().field("Timer start").getTime()}function create_log_entry(text){libByName("Log").create({Description:text,Datetime:new Date(Date.now())})}function start_stop(){if(entry().field("Running")){finish()}else{start(entry())}}function reschedule(){if(arg("Adjust repeat interval")=="Less"){bisect_repeat_interval(false)}else if(arg("Adjust repeat interval")=="More"){bisect_repeat_interval(true)}if(arg("Specific datetime")){entry().set("Start datetime",arg("Specific datetime"))}else if(arg("Repeat interval")){entry().set("Start datetime",new Date(Date.now()+entry().field("Repeat Interval")))}else if(arg("Specific duration")){entry().set("Start datetime",new Date(Date.now()+arg("Specific duration")))}}function bisect_repeat_interval(more){entry().set("Repeat interval",xbisect(entry().field("Repeat interval")/1000/60/60,more)*1000*60*60)}var sort_orders=[function start_datetime(entries){return sort(entries,function(e){return e.field("Start datetime")},SortDir.Ascending)},function deadline(entries){return sort(entries.filter(function(x){return x.field("Deadline")}),function(e){return e.field("Deadline")},SortDir.Ascending)},function value(entries){return sort(entries.filter(function(x){return x.field("Total runtime")}),function(e){return e.field("Value")/e.field("Total runtime")},SortDir.Descending)},function importance(entries){return sort(entries.filter(function(x){return x.field("Importance")}),function(e){return e.field("Importance")},SortDir.Descending)},function remaining_runtime(entries){return sort(entries,function(e){return e.field("Expected runtime")?e.field("Expected runtime")-e.field("Runtime"):e.field("Runtime")},SortDir.Ascending)}];function pick_task(){var lists=[];for(var _i=0,sort_orders_1=sort_orders;_i<sort_orders_1.length;_i++){var fn=sort_orders_1[_i];lists.push(copy_array(fn(active_tasks())))}var task=instant_runoff(lists);start(task);task.show();return task}function increase_priority(){adjust_priority(1)}function decrease_priority(){adjust_priority(-1)}function cancel(){entry().set("Running",false)}function init_sim(){current_entry=null;library=new Library;entries=new Entries;args={};for(var _i=0,test_data_1=test_data;_i<test_data_1.length;_i++){var obj=test_data_1[_i];library.create(Object.assign({},obj))}}init_sim();current_entry=lib().entries()[0];start_stop();cancel();assert(entry().field("Running")==false,"Failed to cancel running task.");init_sim();var sorted_tasks=sort(get_all_tasks(),function(x){return x.field("Importance")},SortDir.Descending);current_entry=lib().entries()[Math.floor(lib().entries().length/2)];var index=sorted_tasks.findIndex(function(x){return x.field("Name")==entry().field("Name")});decrease_priority();sorted_tasks=sort(get_all_tasks(),function(x){return x.field("Importance")},SortDir.Descending);var new_index=sorted_tasks.findIndex(function(x){return x.field("Name")==entry().field("Name")});assert(new_index>index,"Failed to decrease priority.");init_sim();sorted_tasks=sort(get_all_tasks(),function(x){return x.field("Importance")},SortDir.Descending);current_entry=lib().entries()[Math.floor(lib().entries().length/2)];index=sorted_tasks.findIndex(function(x){return Object.is(x,entry())});increase_priority();sorted_tasks=sort(get_all_tasks(),function(x){return x.field("Importance")},SortDir.Descending);assert(sorted_tasks.findIndex(function(x){return Object.is(x,entry())})<index,"Failed to increase priority.");init_sim();var task=pick_task();assert(task.field("Name")=="Mop ","Picked the wrong task: "+task.field("Name"));assert(task.field("Running"),"Task didn't automatically start.");init_sim();var specific_datetime=new Date(Date.now()+64*60*60*1000);args["Specific datetime"]=specific_datetime;current_entry=lib().entries()[0];var prev_start=entry().field("Start datetime");reschedule();assert(entry().field("Start datetime")-prev_start<365*24*60*60*1000,"Start datetime set to unexpectedly later date.");assert(entry().field("Start datetime")-prev_start>=60*1000,"Start datetime set to unexpectedly early date.");assert(entry().field("Start datetime").getTime()===specific_datetime.getTime(),"Failed to reschedule using specific datetime.");init_sim();var repeat_interval=64*60*60*1000;args["Repeat interval"]=true;current_entry=lib().entries()[0];entry().set("Repeat interval",repeat_interval);prev_start=entry().field("Start datetime");reschedule();assert(entry().field("Start datetime")-prev_start<365*24*60*60*1000,"Start datetime set to unexpectedly later date.");assert(entry().field("Start datetime")-prev_start>=60*1000,"Start datetime set to unexpectedly early date.");assert(entry().field("Start datetime").getTime()<=new Date(Date.now()+repeat_interval).getTime(),"Failed to reschedule using repeat interval.");init_sim();repeat_interval=64*60*60*1000;args["Repeat interval"]=true;args["Adjust repeat interval"]="Less";current_entry=lib().entries()[0];entry().set("Repeat interval",repeat_interval);prev_start=entry().field("Start datetime");reschedule();assert(entry().field("Start datetime")-prev_start<365*24*60*60*1000,"Start datetime set to unexpectedly later date.");assert(entry().field("Start datetime")-prev_start>=60*1000,"Start datetime set to unexpectedly early date.");assert(Math.abs(entry().field("Repeat interval")-48*60*60*1000)<1000,"Failed to reschedule using repeat interval.");init_sim();var duration=64*60*60*1000;args["Specific duration"]=duration;current_entry=lib().entries()[0];prev_start=entry().field("Start datetime");reschedule();assert(entry().field("Start datetime")-prev_start<365*24*60*60*1000,"Start datetime set to unexpectedly later date.");assert(entry().field("Start datetime")-prev_start>=60*1000,"Start datetime set to unexpectedly early date.");assert(entry().field("Start datetime").getTime()<=new Date(Date.now()+duration).getTime(),"Failed to reschedule using specific duration.");init_sim();current_entry=lib().entries()[0];start_stop();assert(entry().field("Running"),"Failed to start task.");start_stop();assert(!entry().field("Running"),"Failed to stop task.");init_sim();current_entry=lib().entries()[0];start(entry());assert(entry().field("Timer start")>=new Date(Date.now()),"Failed to set timer start.");assert(entry().field("Running"),"Task not running after being started.");init_sim();current_entry=lib().entries()[0];start(entry());finish();assert(!entry().field("Running"),"Task still running after being stopped.");init_sim();current_entry=lib().entries()[0];toggle_running(entry());assert(entry().field("Running"),"Failed to toggle running state.");init_sim();var elapsed_duration=50*60*60*1000;current_entry=lib().entries()[0];entry().set("Timer start",new Date(Date.now()-elapsed_duration));assert(elapsed()>=elapsed_duration,"Failed to calculate elapsed time.");var count_results=counts([4,4,2,4,1,3,5,5,2,3]);var expected_results=[3,3,2,3,1,2,2,2,2,2];if(count_results.length==expected_results.length){for(var i=0;i<count_results.length;i++){assert(count_results[i][0]==expected_results[i][0],"Wrong value in count function results.");assert(count_results[i][1]==expected_results[i][1],"Wrong count in count function results.")}}else{throw"Count function return value is the wrong length."}assert(head([1,2])==1,"head failed");assert(head([])===undefined,"head didn't return undefined");assert(second([1,3])==3,"second failed");init_sim();assert(Array.isArray(to_array(lib().entries())),"to_array didn't make an array.");init_sim();var e=lib().entries()[0];e.set("Start datetime",null);assert(ready(e),"ready doesn't work on null start datetimes");e.set("Start datetime",new Date(Date.now()));assert(ready(e),"ready doesn't work on current datetime");assert(sum([1,2,3])==6,"sum failed");var arr1=[1,2,3,4,5,6,7,8,9,10];var arr2=[1,2,3,4,5,6,7,8,9,10];shuffle_array(arr1);assert(!arr1.every(function(a,i){return a===arr2[i]}),"shuffle_array failed");var arr=[7,6,8,5,9];var expected=[5,6,7,8,9];assert(sort(arr,function(x){return x},SortDir.Ascending).every(function(arr,i){return arr===expected[i]}),"ascending sort failed");arr=[7,6,8,5,9];expected=[9,8,7,6,5];assert(sort(arr,function(x){return x},SortDir.Descending).every(function(arr,i){return arr===expected[i]}),"descending sort failed");var a=[8,7,6,5,4,3,0,9];var b=copy_array(a);shuffle_array(a);assert(!a.every(function(x,i){return x===b[i]}),"copy_array failed");assert(xbisect(38,true)==39,"xbisect failed (1)");assert(xbisect(25,false)==24.5,"xbisect failed (2)");assert(xbisect(51,true)==51.5,"xbisect failed (3)");assert(xbisect(75,false)==74.5,"xbisect failed (4)");assert(xbisect(64,true)==128,"xbisect failed (5)");assert(xbisect(64,false)==48,"xbisect failed (6)");console.log("tests complete");